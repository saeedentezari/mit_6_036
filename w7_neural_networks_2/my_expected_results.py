
# Test values for testing modules



import numpy as np


lin_module_test_values = {
    'm': 3,
    'n': 2,
    'lrate': 1,
    'W_set': np.array([[1, 2], [3, 4], [5, 6]]),
    # 'W0': all zeros
    'input': {
        'A': np.array([[1, 2, 3], [4, 5, 6]]).T,
        'dLdZ': np.array([[1, 3], [2, 4]]),
    },
    'expect': {
        'Z': np.array([[22, 49],[28, 64]]),
        'dLdA': np.array([[5, 11], [11, 25], [17, 39]]),
        'dLdW': np.array([[13, 18], [17, 24], [21, 30]]),
        'dLdW0': np.array([[4], [6]]),
        'Wt': np.array([[-12, -16], [-14, -20], [-16, -24]]),
        'W0t': np.array([[-4], [-6]]),
    },
}


tanh_module_test_values = {
    'input': {
        'Z': np.arange(-3, 3).reshape(3, 2),
        'dLdA': np.arange(6).reshape(3, 2),
    },
    'expect': {
        'A': np.array(
            [[-0.99505475, -0.96402758],
            [-0.76159416,  0.],
            [ 0.76159416,  0.96402758]]
        ),
        'dLdZ': np.array(
            [[0.        , 0.07065082],
            [0.83994868, 3.        ],
            [1.67989737, 0.35325412]]
        ),
    }
}


relu_module_test_values = {
    'input': {
        'Z': np.array([[-1, -2], [0, 0], [1, 2]]),
        'dLdA': np.array([[1, 2], [3, 4], [5, 6]]),
    },
    'expect': {
        'A': np.array([[0, 0], [0, 0], [1, 2]]),
        'dLdZ': np.array([[0, 0], [0, 0], [5, 6]]),
    }
}


softmax_module_test_values = {
    'input': {
        'Z': np.array(
            [
                [-1, 0, 1],
                [1, 2, 4],
            ]
        ).T
    },
    'expect': {
        'Ypred': np.array(
            [
                [0.09003057, 0.24472847, 0.66524096],
                [0.04201007, 0.1141952 , 0.84379473],
            ]
        ).T,
        'classes': np.array([[0, 0, 1]])
    }
}



nll_module_test_values = {
    'input': {
        'Ypred': np.array(
            [
                [0.09003057, 0.24472847, 0.66524096],
                [0.04201007, 0.1141952 , 0.84379473],
            ]
        ).T,
        'Y': np.array(
            [
                [0, 1, 0],
                [1, 0, 0]
            ]
        ).T,
        # 'Y': np.array([[1, 0]])
    },
    'expect': {
        'loss': 4.577451896286752,
        'dLdZ': np.array(
            [
                [ 0.09003057, -0.95798993],
                [-0.75527153,  0.1141952 ],
                [ 0.66524096,  0.84379473],
            ]
        )
    }
}


sequential_module_test_values = {
    'lin1_W': np.array([[ 1.24737338,  0.28295388,  0.69207227],
                        [ 1.58455078,  1.32056292, -0.69103982]]),
    'lin2_W': np.array([[ 0.5485338 , -0.08738612],
                        [-0.05959343,  0.23705916],
                        [ 0.08316359,  0.8396252 ]]),
    'A_1': np.array([[22.8912344 , 20.73366505],
                     [ 9.9982611 , 10.46996239],
                     [ 4.84966811,  2.08241149]]),
    'A_2': np.array([[9.99637598e-01, 9.99797333e-01],
                     [3.62401857e-04, 2.02666719e-04]]),
    'loss': 8.504310172238842,
    'dLdZ_2': np.array([[-3.62401857e-04,  9.99797333e-01],
                        [ 3.62401857e-04, -9.99797333e-01]]),
    # 'dLdZ_1': np.array([[-2.30458563e-04,  6.35791049e-01],
    #                     [ 1.07507449e-04, -2.96592466e-01],
    #                     [ 2.74143091e-04, -7.56308297e-01]]),
    'upd_lin1_W': np.array([[ 1.21877661,  0.29629409,  0.72608969],
                            [ 1.56548281,  1.32945801, -0.66835742]]),
    'upd_lin2_W': np.array([[ 0.44492797,  0.01621971],
                            [-0.11191452,  0.28938024],
                            [ 0.07276243,  0.85002636]]),
    'upd_lin1_W0': np.array([[-0.0031778 ],
                             [ 0.00148242],
                             [ 0.00378017]]),
    'upd_lin2_W0': np.array([[-0.00499717],
                             [ 0.00499717]]),
}